public class AddLeadToQueuesBatchService {
    
    public void updateOwnierIdInLead(List <Lead> leadList){
        updateOwner(leadList);
    }    
    
    public static Map<Id, Integer> searchQueues(){
        Map<Id, Integer> sizeLeadInQueue = new Map<Id, Integer>();
        List<Id> idQueueListForLead = new List<Id>();
        
        Integer valueSizeLeadInQueueMap = 0;
        
        List<QueueSobject> queueList = [SELECT Id, QueueId FROM QueueSobject WHERE SobjectType = 'Lead'];
        for(QueueSobject queueSobj: queueList){
            idQueueListForLead.add(queueSobj.QueueId);
        }
        
        List<Lead> allLead = [SELECT Id, OwnerId From Lead WHERE  OwnerId =: idQueueListForLead];
        for(Id idQueue: idQueueListForLead){                
            for(Lead leadWithQueue: allLead){                    
                if(leadWithQueue.OwnerId == idQueue){
                    valueSizeLeadInQueueMap++;
                }
            }
            sizeLeadInQueue.put(idQueue, valueSizeLeadInQueueMap);                    
            valueSizeLeadInQueueMap = 0;
        }
        
        return sizeLeadInQueue;
    }
    
    public void updateOwner(List <Lead> leadList){
        
        Map<Id, Integer> sizeLeadInQueue = searchQueues();
        List<Integer> keyMapList = new List<Integer>();
        List<Lead> leadsWithUpdateOwner = new List<Lead>();
        
        Id keySizeLeadInQueueMap;
        
        for(Lead sysAdminLead: leadList){
            
            keyMapList.addAll(sizeLeadInQueue.values());
            keyMapList.sort();
            
            for(Id idQueue: sizeLeadInQueue.keySet()){
                if(keyMapList[0] == sizeLeadInQueue.get(idQueue)){
                    keySizeLeadInQueueMap = idQueue;
                }
            }
            
            sysAdminLead.OwnerId = keySizeLeadInQueueMap;
            leadsWithUpdateOwner.add(sysAdminLead);
            
            sizeLeadInQueue.put(keySizeLeadInQueueMap, keyMapList[0] + 1);
            
            keyMapList.clear();
            keySizeLeadInQueueMap = null;
        }
        update leadsWithUpdateOwner;
    }
}